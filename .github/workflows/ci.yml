name: Build
on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [published]
jobs:
  build:
    name: Build AirportItlwm and itlwm
    runs-on:
      - macos-latest
    steps:
      - name: Checkout to current repo
        uses: actions/checkout@v3
      - name: Create output directory for built kexts
        run: mkdir -p Kexts
      - name: Clone itlwm from source
        run: git clone https://github.com/OpenIntelWireless/itlwm
      - name: Get itlwm latest stable release
        id: itlwm-latest-release
        working-directory: itlwm
        run: git describe --tags --abbrev=0
        # run: echo "::set-output name=tag-name::$(git describe --tags --abbrev=0)"
      - name: Checkout to itlwm latest stable release
        working-directory: itlwm
        run: git checkout ${{ steps.itlwm-latest-release.outputs.tag-name }}
      - name: Remove compressed FwBinary.cpp
        working-directory: itlwm
        run: "[ ! -e include/FwBinary.cpp ] && rm -rf include/FwBinary.cpp"
      - name: Clone MacKernelSDK from source
        working-directory: itlwm
        run: |
          echo "WARNING: MacKernelSDK doesn't appear to be cloned. Cloning...;"
          git clone https://github.com/acidanthera/MacKernelSDK.git
      - name: Create a temp folder
        working-directory: itlwm/itlwm
        run: |
          mv firmware firmware_bak
          mkdir firmware
      - name: Build itlwm for each firmware
        working-directory: itlwm
        run: |
          for firmware in $(ls itlwm/firmware_bak); do
            echo $firmware
            if [ -e itlwm/firmware_bak/$firmware ]; then
              echo "Start building $firmware variant for itlwm"
              mv itlwm/firmware_bak/$firmware itlwm/firmware/
              xcodebuild -project itlwm.xcodeproj -scheme "AirportItlwm (all)" -configuration Release -sdk macosx -derivedDataPath out
              xcodebuild -project itlwm.xcodeproj -scheme itlwm -configuration Release -sdk macosx -derivedDataPath out
              mkdir out/Build/Products/Release/itlwm
              mv out/Build/Products/Release/itlwm.kext out/Build/Products/Release/itlwm.kext.dSYM out/Build/Products/Release/itlwm
              7z a -r out/Build/Products/Release/$firmware.zip out/Build/Products/Release/*
              mv out/Build/Products/Release/$firmware.zip ../Kexts
              rm -rf itlwm/firmware/$firmware out
              echo "Finished building $firmware variant for itlwm"
            fi
          done;
      - name: Upload to artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: Kexts/*
      # - name: Upload to Release
      #   if: github.event_name == 'release'
      #   uses: svenstaro/upload-release-action@e74ff71f7d8a4c4745b560a485cc5fdb9b5b999d
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: Kexts/*.zip
      #     tag: ${{ github.ref }}
      #     file_glob: true

